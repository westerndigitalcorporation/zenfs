FROM docker.io/ubuntu:20.04 AS builder

RUN apt-get update \
    && \
    DEBIAN_FRONTEND=noninteractive \
    DEBCONF_NONINTERACTIVE_SEEN=true \
    apt-get install --yes --quiet=2 \
    build-essential \
    git \
    pkg-config \
    cmake \
    autoconf \
    autoconf-archive \
    automake \
    libtool \
    libgflags-dev \
    libsnappy-dev \
    uuid-dev \
    bison \
    autopoint \
    libaio-dev \
    && apt-get clean

ENV WORK_PATH=/rocks/work
ENV INSTALL_PATH=/rocks/dest
RUN mkdir -p $WORK_PATH
RUN mkdir -p $INSTALL_PATH

WORKDIR $WORK_PATH

ARG LIBZBD_GIT_CHECKOUT
RUN git clone --quiet --single-branch --branch master -n --quiet http://github.com/westerndigitalcorporation/libzbd.git \
    && cd libzbd \
    && git checkout $LIBZBD_GIT_CHECKOUT
RUN cd libzbd && sh autogen.sh && ./configure --prefix=${INSTALL_PATH} && make install

RUN git clone --depth 1 --single-branch --branch v2.37.2 https://github.com/util-linux/util-linux \
    && cd util-linux \
    && ./autogen.sh \
    && ./configure --prefix=$INSTALL_PATH \
    && make blkzone \
    && install blkzone $INSTALL_PATH/bin

COPY terarkdb terarkdb

WORKDIR $WORK_PATH/terark-build

RUN \
    PKG_CONFIG_PATH=$INSTALL_PATH/lib/pkgconfig \
    cmake $WORK_PATH/terarkdb \
    -DCMAKE_INSTALL_PREFIX=$INSTALL_PATH \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DWITH_TESTS=OFF \
    -DWITH_ZENFS=ON \
    -DBYTEDANCE_METRICS_PATH=OFF \
    -DWITH_BYTEDANCE_METRICS=OFF \
    -DWITH_TOOLS=ON \
    -DWITH_TERARK_ZIP=OFF \
    -DCMAKE_C_FLAGS="-I$INSTALL_PATH/include" \
    -DCMAKE_CXX_FLAGS="-I$INSTALL_PATH/include" \
    -DCMAKE_SHARED_LINKER_FLAGS="-L$INSTALL_PATH/lib" \
    -DCMAKE_EXE_LINKER_FLAGS="-L$INSTALL_PATH/lib"

RUN make -j $(nproc) VERBOSE=1
RUN make install

RUN \
    install db_bench $INSTALL_PATH/bin \
    && install zenfs $INSTALL_PATH/bin

FROM docker.io/ubuntu:20.04
RUN apt-get update \
    && \
    DEBIAN_FRONTEND=noninteractive \
    DEBCONF_NONINTERACTIVE_SEEN=true \
    apt-get install --yes --quiet=2 \
    libgflags2.2 \
    libsnappy1v5 \
    python3 \
    python3-distutils \
    python3-matplotlib \
    nvme-cli \
    libaio1 \
    && apt-get clean

ENV WORK_PATH=/rocks/work
ENV INSTALL_PATH=/rocks/dest
RUN mkdir -p $WORK_PATH
RUN mkdir -p $INSTALL_PATH

WORKDIR $WORK_PATH

COPY --from=builder $INSTALL_PATH $INSTALL_PATH
COPY --from=builder $WORK_PATH/terarkdb/third-party/zenfs/tests $INSTALL_PATH/zenfs/test

ENV PATH="$INSTALL_PATH/bin:$PATH"
ENV LD_LIBRARY_PATH="$INSTALL_PATH/lib"
